$schema: 'https://moonrepo.dev/schemas/global-project.json'

# OPTIONAL: File groups are a mechanism for grouping similar types of files within a project
# using file glob patterns. These groups are then used by tasks to calculate functionality like
# cache computation, affected files since last change, command line arguments, deterministic
# builds, and more.
#
# This setting requires a map, where the key is the file group name, and the value is a list of
# globs. Globs are relative to a project, even though they are defined globally. This enables
# enforcement of organizational patterns across all projects in the workspace.
fileGroups:
  # List of configuration files located within the project root.
  configs:
    - '*.{js,json}'

  # List of non-test JavaScript/TypeScript source files.
  # This may include runtime, published, or distributable files.
  sources:
    - 'src/**/*'
    - 'types/**/*'

  # List of non-source JavaScript/TypeScript test files.
  # This may include unit tests, E2E tests, stories, etc.
  tests:
    - 'tests/**/*.test.*'
    - '**/__tests__/**/*'

  # All static assets within the project.
  # This may include styles, images, videos, etc.
  assets:
    - 'assets/**/*'
    - 'images/**/*'
    - 'static/**/*'
    - '**/*.{scss,css}'
    - '**/*.mdx'

# OPTIONAL: A task is an action that is ran within the context of a project, and wraps
# around an npm or system command. Tasks that are defined here and inherited by all projects
# within the workspace, but can be overridden per project.
#
# This setting requires a map, where the key is a unique name for the task,
# and the value is an object of task parameters.
tasks:
  # Name of the task.
  name:
    # The name of the binary/command on your system.
    command: 'noop'

    # OPTIONAL: List of arguments to pass on the command line when executing the task.
    args: []

    # OPTIONAL: List of targets that will be executed *before* this task.
    dependsOn: []

    # OPTIONAL: Map of environment variables to pass when executing the command.
    env: {}

    # OPTIONAL: List of file paths/globs to calculate whether to execute the task based on files
    # that have been modified since the last time the task has been ran. By default inputs are
    # relative from the *project root*, and can reference file groups (above). To reference files
    # from the workspace root (for example, config files), prefix the path with a "/".
    inputs: []

    # OPTIONAL: List of files and folders that are created as a result of executing this task,
    # excluding cache related items. By default outputs are relative from the *project root*.
    # To output files to the workspace root, prefix the path with a "/".
    outputs: []

    # OPTIONAL: The type of command to run, and where to locate it.
    # Accepts "node" or "shell".
    type: 'node'
